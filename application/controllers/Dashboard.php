<?php    class Dashboard extends CI_Controller    {        public $mass;        public function __construct()        {            parent::__construct();            $this->load->library('pagination');            $this->load->library('form_validation');            if ($this->session->userdata('is_logged_in') == 0) {                redirect('login');            }            $this->load->helper(array('url', 'text', 'permission', 'form', 'download'));            $this->load->library('encrypt');                    }        public function intPart($float)        {            if ($float < -0.0000001)                return ceil($float - 0.0000001);            else                return floor($float + 0.0000001);        }        public function Greg2Hijri(/*$day, $month, $year*/)        {            /*$day   = (int) $day;            $month = (int) $month;            $year  = (int) $year;*/            $day = (int)date("d");            $month = (int)date("m");            $year = (int)date("Y");            if (($year > 1582) or (($year == 1582) and ($month > 10)) or (($year == 1582) and ($month == 10) and ($day > 14))) {                $jd = $this->intPart((1461 * ($year + 4800 + $this->intPart(($month - 14) / 12))) / 4) + $this->intPart((367 * ($month - 2 - 12 * ($this->intPart(($month - 14) / 12)))) / 12) -                    $this->intPart((3 * ($this->intPart(($year + 4900 + $this->intPart(($month - 14) / 12)) / 100))) / 4) + $day - 32075;            } else {                $jd = 367 * $year - $this->intPart((7 * ($year + 5001 + $this->intPart(($month - 9) / 7))) / 4) + $this->intPart((275 * $month) / 9) + $day + 1729777;            }            $l = $jd - 1948440 + 10632;            $n = $this->intPart(($l - 1) / 10631);            $l = $l - 10631 * $n + 354;            $j = ($this->intPart((10985 - $l) / 5316)) * ($this->intPart((50 * $l) / 17719)) + ($this->intPart($l / 5670)) * ($this->intPart((43 * $l) / 15238));            $l = $l - ($this->intPart((30 - $j) / 15)) * ($this->intPart((17719 * $j) / 50)) - ($this->intPart($j / 16)) * ($this->intPart((15238 * $j) / 43)) + 29;            $month = $this->intPart((24 * $l) / 709);            $day = $l - $this->intPart((709 * $month) / 24);            $year = 30 * $n + $j - 30;            $date = array();            $date['year'] = $year;            $date['month'] = $month;            $date['day'] = $day;            /*if (!$string)                return $date;            else*/            return "{$year}-{$month}-{$day}";        }        private function test($data = array())        {            echo "<pre>";            print_r($data);            echo "</pre>";            die;        }        private function ara_date()        {            $nameday = date("l");            $day = date("d");            $namemonth = date("m");            $year = date("Y");            switch ($nameday) {                case "Saturday":                    $nameday = "السبت";                    break;                case "Sunday":                    $nameday = "الأحد";                    break;                case "Monday":                    $nameday = "الاثنين";                    break;                case "Tuesday":                    $nameday = "الثلاثاء";                    break;                case "Wednesday":                    $nameday = "الأربعاء";                    break;                case "Thursday":                    $nameday = "الخميس";                    break;                case "Friday":                    $nameday = "الجمعة";                    break;            }            switch ($namemonth) {                case 1:                    $namemonth = "يناير";                    break;                case 2:                    $namemonth = "فبراير";                    break;                case 3:                    $namemonth = "مارس";                    break;                case 4:                    $namemonth = "إبريل";                    break;                case 5:                    $namemonth = "مايو";                    break;                case 6:                    $namemonth = "يونيو";                    break;                case 7:                    $namemonth = "يوليو";                    break;                case 8:                    $namemonth = "اغسطس";                    break;                case 9:                    $namemonth = "سبتمبر";                    break;                case 10:                    $namemonth = "اكتوبر";                    break;                case 11:                    $namemonth = "نوفمبر";                    break;                case 12:                    $namemonth = "ديسمبر";                    break;            }            return "$nameday $day $namemonth $year";        }        /**         * @param $type     success         * @param $type     wiring         * @param $type     error         */        private function message($type, $text)        {            if ($type == 'success') {                return $this->session->set_flashdata('message', '<div class="alert alert-success alert-dismissible shadow" ><button type="button" class="close pull-left" data-dismiss="alert">×</button><h4 class="text-lg"><i class="fa fa-check icn-xs"></i> تم بنجاح ...</h4><p>' . $text . '!</p></div>');            } elseif ($type == 'wiring') {                return $this->session->set_flashdata('message', '<div class="alert alert-warning alert-dismissible" ><button type="button" class="close pull-left" data-dismiss="alert">×</button><h4 class="text-lg"><i class="fa fa-exclamation-triangle icn-xs"></i> تحذير هام ...</h4><p>' . $text . '</p></div>');            } elseif ($type == 'error') {                return $this->session->set_flashdata('message', '<div class="alert alert-danger alert-dismissible" ><button type="button" class="close pull-left" data-dismiss="alert">×</button><h4 class="text-lg"><i class="fa fa-exclamation-circle icn-xs"></i> خطآ ...</h4><p>' . $text . '</p></div>');            }        }        private function thumb($data)        {            $config['image_library'] = 'gd2';            $config['source_image'] = $data['full_path'];            $config['new_image'] = 'uploads/thumbs/' . $data['file_name'];            $config['create_thumb'] = TRUE;            $config['maintain_ratio'] = TRUE;            $config['thumb_marker'] = '';            $config['width'] = 275;            $config['height'] = 250;            $this->load->library('image_lib', $config);            $this->image_lib->resize();        }        private function upload_image($file_name)        {            $config['upload_path'] = 'uploads/images';            $config['allowed_types'] = 'gif|Gif|ico|ICO|jpg|JPG|jpeg|JPEG|BNG|png|PNG|bmp|BMP|WMV|wmv|MP3|mp3|FLV|flv|SWF|swf';            $config['max_size'] = '1024*8';            $config['encrypt_name'] = true;            $this->load->library('upload', $config);            if (!$this->upload->do_upload($file_name)) {                return false;            } else {                $datafile = $this->upload->data();                $this->thumb($datafile);                return $datafile['file_name'];            }            //  unlink($datafile['full_path']);        }        //////////////////////////////////        private function upload_file($file_name)        {            $config['upload_path'] = 'uploads/files';            $config['allowed_types'] = 'gif|Gif|ico|ICO|jpg|JPG|jpeg|JPEG|BNG|png|PNG|bmp|BMP|WMV|wmv|MP3|mp3|FLV|flv|SWF|swf|pdf|PDF|xls|xlsx|mp4|doc|docx|txt|rar|tar.gz|zip';            $config['max_size'] = '1024*8';            //$config['encrypt_name']=true;            $config['overwrite'] = true;            $this->load->library('upload', $config);            if (!$this->upload->do_upload($file_name)) {                return false;            } else {                $datafile = $this->upload->data();                return $datafile['file_name'];            }        }        ////////////////////end of excel library option        private function url()        {            unset($_SESSION['url']);            $this->session->set_flashdata('url', 'http://' . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI']);        }        ///////////////////////////////        private function sendmail($from, $name, $to = array(), $cc = false, $bcc = false, $subject, $message, $attach = false)        {            $this->load->library('email');            $this->email->from($from, $name);            $this->email->to($to);            $this->email->cc($cc);            $this->email->bcc($bcc);            $this->email->subject($subject);            $this->email->message($message);            $this->email->attach($attach);            if (!$this->email->send()) {                // return show_error($this->email->print_debugger());                return false;            } else {                return true;            }        }        /**@         * @param $method         * @param $recordcount         * @param $per_page         * @return array         */        private function pagnate($method, $recordcount, $per_page)        {            $config = array();            $config["base_url"] = base_url() . "dashboard/" . $method;            $config["total_rows"] = $recordcount;            $config["per_page"] = $per_page;            $config["uri_segment"] = 3;            $config['use_page_numbers'] = TRUE;            $config['full_tag_open'] = '<ul class="pagination" >';            $config['full_tag_close'] = '</ul>';            $config['first_link'] = '<li class="disabled"><a href="#">«</a></li>';            $config['last_link'] = '<li><a href="#">»</a></li>';            $config['first_tag_open'] = '<li>';            $config['first_tag_close'] = '</li>';            $config['prev_link'] = '&laquo';            $config['prev_tag_open'] = '<li class="prev">';            $config['prev_tag_close'] = '</li>';            $config['next_link'] = '&raquo';            $config['next_tag_open'] = '<li>';            $config['next_tag_close'] = '</li>';            $config['last_tag_open'] = '<li>';            $config['last_tag_close'] = '</li>';            $config['cur_tag_open'] = '<li class="active"><a href="#">';            $config['cur_tag_close'] = '</a></li>';            $config['num_tag_open'] = '<li>';            $config['num_tag_close'] = '</li>';            $this->pagination->initialize($config);            return $config;        }        /////////////////////////main page        public function index()        {            //$this->test(setpermition());            $data['title'] = 'موقع ريفانا';            $data['subview'] = 'admin/main';            $this->load->view('index', $data);        }        public function addgroup()        {            $this->url();            $this->load->model('Groups');            if ($this->input->post('add_groupe') == true) {                if ($this->Groups->addGroup()) {                    $this->message('success', 'تمت إضافة المجموعة بنجاح');                } else {                    $this->message('error', 'خطأ تأكد من البيانات ');                }            }            $config = array();            $config["base_url"] = base_url() . "dashboard/addgroup";            // $config["total_rows"] = $this->Groups->record_count();            // $config["per_page"] = 10;$config["uri_segment"] = 3;$config['use_page_numbers'] = TRUE;$config['full_tag_open'] = '<ul class="pagination">';$config['full_tag_close'] = '</ul>';$config['first_link'] = '<li class="disabled"><a href="#">«</a></li>';$config['last_link'] = '<li><a href="#">»</a></li>';$config['first_tag_open'] = '<li>';$config['first_tag_close'] = '</li>';$config['prev_link'] = '&laquo';$config['prev_tag_open'] = '<li class="prev">';$config['prev_tag_close'] = '</li>';$config['next_link'] = '&raquo';$config['next_tag_open'] = '<li>';$config['next_tag_close'] = '</li>';$config['last_tag_open'] = '<li>';$config['last_tag_close'] = '</li>';$config['cur_tag_open'] = '<li class="active"><a href="#">';$config['cur_tag_close'] = '</a></li>';$config['num_tag_open'] = '<li>';$config['num_tag_close'] = '</li>';            // $this->pagination->initialize($config);            // $page = ($this->uri->segment(3)) ? $this->uri->segment(3) : 0;            $data["groups"] = $this->Groups->fetch_groups('', '');            //   $data["links"] = $this->pagination->create_links();            $data['title'] = 'إضافة مجموعة تحكم';            $data['metakeyword'] = 'اعداددات الموقع ';            $data['metadiscription'] = '';            $data['subview'] = 'admin/groups/group';            $this->load->view('index', $data);        }        public function delete_group_by_id($id)        {            $this->db->where('group_id', $id);            $this->db->delete('groups');            redirect('dashboard/addgroup');        }        public function update_group_by_id()        {            $this->url();            $data['id'] = $this->uri->segment(3);            $this->load->model('Groups');            $data['result_id'] = $this->Groups->getgroupbyid($data['id']);            if ($this->input->post('edit_groupe')) {                $update = array('group_title' => $this->input->post('group_title'),                    'group_order' => $this->input->post('group_order'),                    'group_icon_code' => $this->input->post('group_icon_code'),                    'group_link' => $this->input->post('group_link'));                if ($this->Groups->updateGroup($data['id'], $update) == 1) {                    $this->message('success', 'تم تعديل البيان بنجاح');                    redirect('dashboard/addgroup', 'refresh');                } else {                    $this->message('error', 'خطأ فى التعديل حاول مرة اخرى');                }            }            $data['title'] = 'تعديل بيانات مجموعة تحكم';            $data['metakeyword'] = 'اعداددات الموقع ';            $data['metadiscription'] = '';            $data['subview'] = 'admin/groups/group';            $this->load->view('index', $data);        }        ////////////////////////pages        public function add_page()        {            $this->url();            $this->load->model('Pages');            if ($this->input->post('add_page') == true) {                if ($this->Pages->insert() == true) {                    $this->message('success', 'تم اضافة الصفحة بنجاح');                } else {                    $this->message('error', 'خطأ فى الادخال حاول مرة اخرى');                }            }            $config = $this->pagnate('add_page', $this->Pages->record_count(), 50);            $data["pages"] = $this->Pages->select($config["per_page"], $config["uri_segment"]);            $data["links"] = $this->pagination->create_links();            $data['groups'] = $this->Pages->get_all_groups();            $data['title'] = 'إضافة صفحات مجموعات التحكم  ';            $data['metakeyword'] = 'اعداددات الموقع ';            $data['metadiscription'] = '';            $data['subview'] = 'admin/groups/pages';            $this->load->view('index', $data);        }        public function update_pages_by_id()        {            $this->url();            $data['pages'] = '';            $data['id'] = $this->uri->segment(3);            $this->load->model('Pages');            $data['page_data'] = $this->Pages->get_by_id($data['id']);            if ($this->input->post('edit_page')) {                $update = array('page_title' => $this->input->post('page_title'),                    'page_link' => $this->input->post('page_link'),                    'page_order' => $this->input->post('page_order'),                    'page_icon_code' => $this->input->post('page_icon_code'),                    'group_id_fk' => $this->input->post('group_id_fk'));                if ($this->Pages->update($data['id'], $update) == 1) {                    $this->message('success', 'تم العملية بنجاح');                    redirect('dashboard/add_page', 'refresh');                } else {                    $this->message('error', 'خطأ فى عملية التعديل حاول مرة اخرى');                }            }            $data['groups'] = $this->Pages->get_all_groups();            $data['title'] = 'تعديل بيانات صفحات التحكم';            $data['metakeyword'] = 'اعداددات الموقع ';            $data['metadiscription'] = '';            $data['subview'] = 'admin/groups/pages';            $this->load->view('index', $data);        }        public function delete_page_by_id($id)        {            $this->db->where('page_id', $id);            $this->db->delete('pages');            redirect('dashboard/add_page');        }        //////////////////////////////roles        public function create_role()        {            $this->url();            $data['title'] = 'إضافة أدوار التحكم';            $data['metakeyword'] = 'إعدادات الموقع ';            $data['metadiscription'] = '';            $data['subview'] = 'admin/users/roles';            $this->load->model('Roles');            if ($this->input->post('add_role') == true) {                if ($this->Roles->insert() == true) {                    $this->message('success', 'تم إضافة الدور بنجاح');                } else {                    $this->message('error', 'خطأ فى الإدخال حاول مرة اخرى');                }            }            $data['roles'] = $this->Roles->select();            $this->load->view('index', $data);        }        public function deleteRole($id)        {            $this->load->model('Roles');            $this->Roles->delete($id);            redirect('dashboard/create_role');        }        public function update_role($id)        {            $this->url();            $data['roles'] = '';            $this->load->model('Roles');            $data['role_data'] = $this->Roles->get_by_id($id);            if ($this->input->post('edit_role')) {                if ($this->Roles->update($id) == 1) {                    $data['message'] = $this->message('success', 'تم التعديل بنجاح');                    redirect('dashboard/create_role', 'refresh');                } else {                    $this->message('error', 'خطأ فى حفظ التعديلات  حاول مرة اخرى');                }            }            $data['title'] = 'تعديل دور التحكم';            $data['metakeyword'] = 'اعداددات الموقع ';            $data['metadiscription'] = '';            $data['subview'] = 'admin/users/roles';            $this->load->view('index', $data);        }        //////////////////////users        public function add_user()        {            $this->url();            $this->load->model('Users');            if ($this->input->post('add_user') == 'add_user') {                /////////////////////                $file_name = 'user_photo';                $file = $this->upload_image($file_name);                if ($file == false) {                    $file = 'user.png';                    $this->message('error', 'نوع الملفات غير مسموح به');                }                //////////////////////////////////                if ($this->Users->insert($file)) {                    $this->message('success', 'تم إضافة مستخدم بنجاح');                } else {                    $this->message('error', 'لم تتم العملية بشكل سليم تأكد من البيانات ');                }            }            $config = array();            $config["base_url"] = base_url() . "dashboard/add_user";            $config["total_rows"] = $this->Users->record_count();            $config["per_page"] = 20;            $config["uri_segment"] = 3;            $config['use_page_numbers'] = TRUE;            $config['full_tag_open'] = '<ul class="pagination">';            $config['full_tag_close'] = '</ul>';            $config['first_link'] = '<li class="disabled"><a href="#">«</a></li>';            $config['last_link'] = '<li><a href="#">»</a></li>';            $config['first_tag_open'] = '<li>';            $config['first_tag_close'] = '</li>';            $config['prev_link'] = '&laquo';            $config['prev_tag_open'] = '<li class="prev">';            $config['prev_tag_close'] = '</li>';            $config['next_link'] = '&raquo';            $config['next_tag_open'] = '<li>';            $config['next_tag_close'] = '</li>';            $config['last_tag_open'] = '<li>';            $config['last_tag_close'] = '</li>';            $config['cur_tag_open'] = '<li class="active"><a href="#">';            $config['cur_tag_close'] = '</a></li>';            $config['num_tag_open'] = '<li>';            $config['num_tag_close'] = '</li>';            $this->pagination->initialize($config);            $page = ($this->uri->segment(3)) ? $this->uri->segment(3) : 0;            $data["users"] = $this->Users->fetch_users($config["per_page"], $page);            $data["links"] = $this->pagination->create_links();            if ($this->input->post('num')) {                $this->load->model('App');                $data['result'] = $this->App->records_select_user($this->input->post('num'));                $data['result22'] = $this->App->records_select_user2($_POST['id']);                $this->load->view('admin/users/load', $data);            } else {                $data['title'] = 'إضافة مستخدم جديد';                $data['metakeyword'] = 'اعدادات المستخدمين';                $data['metadiscription'] = '';                $data['subview'] = 'admin/users/users';                $this->load->view('index', $data);            }        }        public function users_data()        {            $this->load->model('Users');            $data['records'] = $this->Users->select();            $data['title'] = 'بيانات المستخدمين';            $data['metakeyword'] = 'بيانات المستخدمين';            $data['metadiscription'] = '';            $data['subview'] = 'admin/users/users_data';            $this->load->view('index', $data);        }        public function delete_user_by_id($id)        {            $this->load->model('Users');            $this->Users->delete($id);            redirect('dashboard/add_user');        }        public function update_user_by_id($id)        {            $this->url();            $this->load->model('Users');            $this->load->model('App');            $data['user_row'] = $this->Users->display($id);            /*if($this->input->post('num'))            {                $data['result'] = $this->App->records_select_user($this->input->post('num'));                $data['result22'] = $this->App->records_select_user2($data['user_row']['vounter_id']);                $this->load->view('admin/users/load', $data);            }*/            $data['result'] = $this->App->records_select_user($data['user_row']['type']);            $data['result2'] = $this->App->records_select_user2($data['user_row']['vounter_id']);            $data['users'] = '';            if ($this->input->post('edit_user')) {                $file_name = 'user_photo';                $file = $this->upload_image($file_name);                if ($this->Users->update($id, $file)) {                    $this->message('success', 'تم تعديل البيانات');                    redirect('dashboard/add_user', 'refresh');                } else {                    $this->message('error', 'خطأ فى حفظ التعديلات  حاول مرة أخرى');                }            }            $data['title'] = 'تعديل بيانات المستخدم';            $data['metakeyword'] = 'اعداددات المستخدمين ';            $data['metadiscription'] = '';            $data['subview'] = 'admin/users/users';            $this->load->view('index', $data);        }        public function patron()        {            $this->url();            $this->load->model('Users');            if ($this->input->post('edit_user')) {                $file = $this->upload_image('user_photo');                $this->Users->update($_SESSION['user_id'], $file);                /*if ($this->Users->update($_SESSION['user_id'],$file) == 1) {                //$this->load->library('email');$this->email->from($_SESSION['school_email'],$_SESSION['school_name']);$this->email->to($this->input->post('user_email'));$this->email->subject($_SESSION['school_name']. 'بيانات الحساب');                //$this->email->message("شكرا لك تم التسجيل فى نظام الرسوم المدرسية  بيانات التسجيل الخاصة بك هى : اسم الدخول:".$this->input->post('user_username')." كلمة المرور هى :" . $this->input->post('user_pass'). "يمكنك الدخول عبر الرابط التالى ".base_url());                //$this->email->send();                //$this->message('success','تم تعديل بياناتك الشخصية وارسال المعلومات عبر البريد الاليكترونى');                redirect('dashboard', 'refresh');            } else {                $this->message('error','خطأ فى حفظ التعديلات  حاول مرة أخرى');            }*/                $this->message('success', 'تم تعديل بياناتك الشخصية ');                redirect('dashboard', 'refresh');            }            $data['title'] = 'تعديل بيانات المستخدم';            $data['metakeyword'] = 'اعداددات المستخدمين ';            $data['metadiscription'] = '';            $data['subview'] = 'admin/users/patron';            $this->load->view('index', $data);        }        public function systembacup()        {            $this->load->dbutil();            $this->load->helper(array('file', 'download'));            $backup =& $this->dbutil->backup();            $filename = 'backup-' . time() . ' .zip';            write_file('/asisst/backup/databases/' . $filename, $backup);            force_download($filename, $backup);        }        public function backup()        {            $data['title'] = 'النسخ الاحتياطى للبيانات';            $data['metakeyword'] = 'اعدادات الحماية';            $data['metadiscription'] = '';            $data['subview'] = 'admin/backup';            $this->load->view('index', $data);        }        public function mailbox()        {            $this->load->model("Mailbox");            if ($this->input->post('send') == 'send' && $this->input->post('to') != "") {                $file_name = 'attachment';                $file = $this->upload_file($file_name);                if ($this->Mailbox->sendmessage($file) == true) {                    $this->message('success', 'تم ارسال الرسالة بنجاح');                } else {                    $this->message('error', 'خطا فى الارسال من فضلك تاكد من البيانات');                }            }            $data['users'] = $this->Mailbox->getallusers();            $data['messages'] = $this->Mailbox->getallmessage();            //$this->test($data['messages']);            $data['title'] = 'البريد الإليكترونى';            $data['metakeyword'] = 'إعدادات البريد الاليكترونى ';            $data['metadiscription'] = '';            $data['subview'] = 'admin/message/mailbox';            $this->load->view('index', $data);        }        public function readmessage($id)        {            $this->load->model("Mailbox");            $data["result"] = $this->Mailbox->getmessagebyid($id);            $data['title'] = 'عرض رسالئل البريد الاليكترونى ';            $data['metakeyword'] = 'إعدادات البريد الاليكترونى ';            $data['metadiscription'] = '';            $data['subview'] = 'admin/message/readmessage';            $this->load->view('index', $data);        }        public function viewmessage($id)        {            $this->load->model("Contact");            $data["result"] = $this->Contact->getmessagebyid($id);            $this->Contact->readmessagebyid($id);            $data['title'] = 'عرض رسائل البريد الألكتروني';            $data['metakeyword'] = 'إعدادات البريد الألكتروني';            $data['metadiscription'] = '';            $data['subview'] = 'admin/contact/viewmessage';            $this->load->view('index', $data);            //redirect('dashboard/viewmessage/'.$id.'');        }        //---------------------------------------start-----------------------------//        public function add_img()        {            $this->load->model('Albums');            if ($this->input->post('add_img')) {                $file_name = 'img';                $file = $this->upload_image($file_name);                $this->Albums->insert($file);                $this->message('success', 'البوم الصور');                redirect('dashboard/add_img', 'refresh');            }            $data['records'] = $this->Albums->select('');            $data['title'] = ' البوم الصور';            $data['metakeyword'] = 'إعدادات البوم الصور';            $data['metadiscription'] = '';            $data['subview'] = 'admin/albums/albums_img';            $this->load->view('index', $data);        }        public function delete_img($id)        {            $this->load->model('Albums');            $this->Albums->delete($id);            redirect('dashboard/add_img');        }        public function update_img($id)        {            $this->load->model('Albums');            if ($this->input->post('update')) {                $file_name = 'img';                $file = $this->upload_image($file_name);                $this->Albums->update($id, $file);                $this->message('success', 'تعديل البوم الصور');                redirect('dashboard/add_img', 'refresh');            }            $data['result'] = $this->Albums->getById($id);            $data['title'] = 'تعديل البوم الصور';            $data['metakeyword'] = 'إعدادات البوم الصور';            $data['metadiscription'] = '';            $data['subview'] = 'admin/albums/albums_img';            $this->load->view('index', $data);        }        public function suspend_img($id, $clas)        {            $this->load->model('Albums');            $this->Albums->suspend($id, $clas);            if ($clas == 'danger')                $this->message('success', 'البوم الصور نشطة');            else                $this->message('success', 'البوم الصور غير نشطة');            redirect('dashboard/add_img');        }//---------------------------------الأهداف----------------------------------//    public function addabout()    {        $this->load->model('Abouts');        if ($this->input->post('add_about')) {            $file_name = 'img';            $file = $this->upload_image($file_name);            $this->Abouts->insert($file, 1);            $this->message('success', 'اهداف  ريفانا');            redirect('dashboard/addabout', 'refresh');        }        $data['records'] = $this->Abouts->select('', 1);        $data['title'] = ' اهداف ريفانا';        $data['metakeyword'] = 'إعدادات اهداف  ريفانا';        $data['metadiscription'] = '';        $data['subview'] = 'admin/about/about';        $this->load->view('index', $data);    }    public function deleteabout($id)    {        $this->load->model('Abouts');        $this->Abouts->delete($id);        redirect('dashboard/addabout');    }    public function updateabout($id)    {        $this->load->model('Abouts');        if ($this->input->post('update')) {            $file_name = 'img';            $file = $this->upload_image($file_name);            $this->Abouts->update($id, $file);            $this->message('success', 'تعديل اهداف ريفانا');            redirect('dashboard/addabout', 'refresh');        }        $data['result'] = $this->Abouts->getById($id);        $data['title'] = 'تعديل اهداف ريفانا';        $data['metakeyword'] = 'إعدادات اهداف ريفانا';        $data['metadiscription'] = '';        $data['subview'] = 'admin/about/about';        $this->load->view('index', $data);    }    public function suspendAbout($id, $clas)    {        $this->load->model('Abouts');        $this->Abouts->suspend($id, $clas);        if ($clas == 'danger')            $this->message('success', 'اهداف عن  ريفانا نشطة');        else            $this->message('success', 'اهداف عن ريفانا  غير نشطة');        redirect('dashboard/addabout');    }//---------------------------------مزايا التعلم مع بلا حدود----------------------------------//    public function addbenefits()    {        $this->load->model('Abouts');        if ($this->input->post('add_benefits')) {            $file_name = 'img';            $file = $this->upload_image($file_name);            $this->Abouts->insert($file, 3);            $this->message('success', 'مزايا التعلم مع ريفانا');            redirect('dashboard/addbenefits', 'refresh');        }        $data['records'] = $this->Abouts->select('', 3);        $data['title'] = ' مزايا التعلم مع ريفانا';        $data['metakeyword'] = 'إعدادات مزايا التعلم مع ريفانا';        $data['metadiscription'] = '';        $data['subview'] = 'admin/about/benefits';        $this->load->view('index', $data);    }    public function deletebenefits($id)    {        $this->load->model('Abouts');        $this->Abouts->delete($id);        redirect('dashboard/addbenefits');    }    public function updatebenefits($id)    {        $this->load->model('Abouts');        if ($this->input->post('update')) {            $file_name = 'img';            $file = $this->upload_image($file_name);            $this->Abouts->update($id, $file);            $this->message('success', 'تعديل مزايا التعلم مع ريفانا');            redirect('dashboard/addbenefits', 'refresh');        }        $data['result'] = $this->Abouts->getById($id);        $data['title'] = 'تعديل مزايا التعلم مع ريفانا';        $data['metakeyword'] = 'إعدادات مزايا التعلم مع ريفانا';        $data['metadiscription'] = '';        $data['subview'] = 'admin/about/benefits';        $this->load->view('index', $data);    }    public function suspendbenefits($id, $clas)    {        $this->load->model('Abouts');        $this->Abouts->suspend($id, $clas);        if ($clas == 'danger')            $this->message('success', 'مزايا التعلم مع ريفانا  نشطة');        else            $this->message('success', 'مزايا التعلم مع ريفانا  غير نشطة');        redirect('dashboard/addbenefits');    }//---------------------------------اهم ما تقدمه بلا حدود----------------------------------//    public function add_important()    {        $this->load->model('Abouts');        if ($this->input->post('add_important')) {            $file_name = 'img';            $file = $this->upload_image($file_name);            $this->Abouts->insert_important($file, 2);            $this->message('success', 'اهم ما تقدمة ريفانا');            redirect('dashboard/add_important', 'refresh');        }        $data['records'] = $this->Abouts->select('', 2);        $data['title'] = ' اهم ما تقدمة ريفانا';        $data['metakeyword'] = 'إعدادات اهم ما تقدمة ريفانا';        $data['metadiscription'] = '';        $data['subview'] = 'admin/about/important';        $this->load->view('index', $data);    }    public function delete_important($id)    {        $this->load->model('Abouts');        $this->Abouts->delete($id);        redirect('dashboard/add_important');    }    public function update_important($id)    {        $this->load->model('Abouts');        if ($this->input->post('update')) {            $file_name = 'img';            $file = $this->upload_image($file_name);            $this->Abouts->update($id, $file);            $this->message('success', 'تعديل اهم ما تقدمة ريفانا');            redirect('dashboard/add_important', 'refresh');        }        $data['result'] = $this->Abouts->getById($id);        $data['title'] = 'تعديل اهم ما تقدمة ريفانا';        $data['metakeyword'] = 'إعدادات اهم ما تقدمة ريفانا';        $data['metadiscription'] = '';        $data['subview'] = 'admin/about/important';        $this->load->view('index', $data);    }    public function suspend_important($id, $clas)    {        $this->load->model('Abouts');        $this->Abouts->suspend($id, $clas);        if ($clas == 'danger')            $this->message('success', 'اهم ما تقدمة  ريفانا نشطة');        else            $this->message('success', 'اهم ما تقدمة ريفانا  غير نشطة');        redirect('dashboard/add_important');    }//---------------------------------من نحن----------------------------------//    public function add_us()    {        $this->load->model('Us');        if ($this->input->post('add_us')) {            $this->Us->insert(1);            $this->message('success', 'من نحن');            redirect('dashboard/add_us', 'refresh');        }        $data['records'] = $this->Us->select('', 1);        $data['title'] = ' من نحن';        $data['metakeyword'] = 'إعدادات من نحن';        $data['metadiscription'] = '';        $data['subview'] = 'admin/about/us';        $this->load->view('index', $data);    }    public function delete_us($id)    {        $this->load->model('Us');        $this->Us->delete($id);        redirect('dashboard/add_us');    }    public function update_us($id)    {        $this->load->model('Us');        if ($this->input->post('update')) {            $this->Us->update($id);            $this->message('success', 'تعديل من نحن');            redirect('dashboard/add_us', 'refresh');        }        $data['result'] = $this->Us->getById($id);        $data['title'] = 'تعديل من نحن';        $data['metakeyword'] = 'إعدادات من نحن';        $data['metadiscription'] = '';        $data['subview'] = 'admin/about/us';        $this->load->view('index', $data);    }    public function suspend_us($id, $clas)    {        $this->load->model('Us');        $this->Us->suspend($id, $clas);        if ($clas == 'danger')            $this->message('success', 'من نحن نشطة');        else            $this->message('success', 'من نحن غير نشطة');        redirect('dashboard/add_us');    }//---------------------------------رسالتنا----------------------------------//    public function add_message()    {        $this->load->model('Us');        if ($this->input->post('add_message')) {            $this->Us->insert(2);            $this->message('success', 'رسالتنا');            redirect('dashboard/add_message', 'refresh');        }        $data['records'] = $this->Us->select('', 2);        $data['title'] = ' رسالتنا';        $data['metakeyword'] = 'إعدادات رسالتنا';        $data['metadiscription'] = '';        $data['subview'] = 'admin/about/message';        $this->load->view('index', $data);    }    public function delete_message($id)    {        $this->load->model('Us');        $this->Us->delete($id);        redirect('dashboard/add_message');    }    public function update_message($id)    {        $this->load->model('Us');        if ($this->input->post('update')) {            $this->Us->update($id);            $this->message('success', 'تعديل رسالتنا');            redirect('dashboard/add_message', 'refresh');        }        $data['result'] = $this->Us->getById($id);        $data['title'] = 'تعديل رسالتنا';        $data['metakeyword'] = 'إعدادات رسالتنا';        $data['metadiscription'] = '';        $data['subview'] = 'admin/about/message';        $this->load->view('index', $data);    }    public function suspend_message($id, $clas)    {        $this->load->model('Us');        $this->Us->suspend($id, $clas);        if ($clas == 'danger')            $this->message('success', 'رسالتنا نشطة');        else            $this->message('success', 'رسالتنا غير نشطة');        redirect('dashboard/add_message');    }//---------------------------------رؤيتنا----------------------------------//    public function add_vision()    {        $this->load->model('Us');        if ($this->input->post('add_vision')) {            $this->Us->insert(3);            $this->message('success', 'رؤيتنا');            redirect('dashboard/add_vision', 'refresh');        }        $data['records'] = $this->Us->select('', 3);        $data['title'] = ' رؤيتنا';        $data['metakeyword'] = 'إعدادات رؤيتنا';        $data['metadiscription'] = '';        $data['subview'] = 'admin/about/vision';        $this->load->view('index', $data);    }    public function delete_vision($id)    {        $this->load->model('Us');        $this->Us->delete($id);        redirect('dashboard/add_vision');    }    public function update_vision($id)    {        $this->load->model('Us');        if ($this->input->post('update')) {            $this->Us->update($id);            $this->message('success', 'تعديل رؤيتنا');            redirect('dashboard/add_vision', 'refresh');        }        $data['result'] = $this->Us->getById($id);        $data['title'] = 'تعديل رؤيتنا';        $data['metakeyword'] = 'إعدادات رؤيتنا';        $data['metadiscription'] = '';        $data['subview'] = 'admin/about/message';        $this->load->view('index', $data);    }    public function suspend_vision($id, $clas)    {        $this->load->model('Us');        $this->Us->suspend($id, $clas);        if ($clas == 'danger')            $this->message('success', 'رؤيتنا نشطة');        else            $this->message('success', 'رؤيتنا غير نشطة');        redirect('dashboard/add_vision');    }    //================================================================main_data====================================================//    public function add_main_data()    {        $this->load->model('Main_data');        if ($this->input->post('add')) {            $file_name = 'comp_logo';            $file = $this->upload_image($file_name);            $this->Main_data->insert($file);            $this->message('success', 'إضافة البيانات الأساسية');            redirect('dashboard/add_main_data');        }        $config = $this->pagnate('add_main_data', $this->Main_data->record_count(), 50);        $data['records'] = $this->Main_data->select($config["per_page"], 0);        if ($this->input->post('num')) {            if ($this->input->post('num') != 0) {                $page = $this->input->post('page');                $data['result'] = $this->input->post('num');                $this->load->view('admin/main_company_data/' . $page . '', $data);            }        } else {            $data['title'] = 'إضافة البيانات الرئيسية';            $data['metakeyword'] = 'إعدادات البيانات الرئيسية';            $data['metadiscription'] = '';            $data['subview'] = 'admin/main_company_data/main_data';            $this->load->view('index', $data);        }    }    public function update_main_data($id)    {        $this->load->model('Main_data');        if ($this->input->post('update')) {            $file_name = 'comp_logo';            $file = $this->upload_image($file_name);            $this->Main_data->update($id, $file);            $this->message('success', 'تعديل البيانات الأساسية');            redirect('dashboard/add_main_data', 'refresh');        }        $data['result'] = $this->Main_data->getById($id);        $data["links"] = $this->pagination->create_links();        $data['title'] = 'تعديل البيانات الأساسية';        $data['metakeyword'] = 'إعدادات البيانات الأساسية';        $data['metadiscription'] = '';        $data['subview'] = 'admin/main_company_data/main_data';        $this->load->view('index', $data);    }    public function delete($from, $id, $index)    {        $this->load->model('Main_data');        $this->Main_data->delete($from, $id, $index);        redirect('dashboard/update_main_data/' . $id . '');    }    //================================================================advertising====================================================//    public function addadver()    {        $this->load->model('Advertising');        $data['array_tables'] = $this->Advertising->record_count2();        if ($this->input->post('add_adver')) {            $file_name = 'img';            $file = $this->upload_image($file_name);            $this->Advertising->insert($file);            $this->message('success', 'إضافة إعلان خارجي');            redirect('dashboard/addadver');        }        $config = $this->pagnate('addadver', $this->Advertising->record_count(), 50);        $data['records'] = $this->Advertising->select($config["per_page"]);        $data["links"] = $this->pagination->create_links();        $data['title'] = 'إضافة الإعلانات الخارجية';        $data['metakeyword'] = 'إعدادات الإعلانات الخارجية';        $data['metadiscription'] = '';        $data['subview'] = 'admin/advertising/advertising';        $this->load->view('index', $data);    }    public function deleteadver($id)    {        $this->load->model('Advertising');        $this->Advertising->delete($id);        redirect('dashboard/addadver');    }    public function updateadver($id)    {        $this->load->model('Advertising');        if ($this->input->post('update_adver')) {            $file_name = 'image';            $file = $this->upload_image($file_name);            $this->Advertising->update($id, $file);            $this->message('success', 'تعديل الإعلان الخارجي ');            redirect('dashboard/addadver', 'refresh');        }        $data['result'] = $this->Advertising->getById($id);        $data["links"] = $this->pagination->create_links();        $data['title'] = 'تعديل إعلان خارجي';        $data['metakeyword'] = 'إعدادات  الإعلانات الخارجية';        $data['metadiscription'] = '';        $data['subview'] = 'admin/advertising/advertising';        $this->load->view('index', $data);    }    //================================================================customer====================================================//    public function add_customer()    {        $this->load->model('Customer');        if ($this->input->post('add_customer')) {            $file_name = 'img';            $file = $this->upload_image($file_name);            $this->Customer->insert($file);            $this->message('success', 'إضافة  عميل');            redirect('dashboard/add_customer', 'refresh');        }        $data['records'] = $this->Customer->select("");        $data["links"] = $this->pagination->create_links();        $data['title'] = 'إضافة عميل';        $data['metakeyword'] = '';        $data['metadiscription'] = '';        $data['subview'] = 'admin/customer/customer';        $this->load->view('index', $data);    }    public function delete_customer($id)    {        $this->load->model('Customer');        $this->Customer->delete($id);        redirect('dashboard/add_customer');    }    public function update_customer($id)    {        $this->load->model('Customer');        if ($this->input->post('update')) {            $file_name = 'img';            $file = $this->upload_image($file_name);            $this->Customer->update($id, $file);            $this->message('success', 'تعديل  بيانات العميل');            redirect('dashboard/add_customer', 'refresh');        }        $data['result'] = $this->Customer->getById($id);        $data["links"] = $this->pagination->create_links();        $data['title'] = 'تعديل  بيانات العميل';        $data['metakeyword'] = '';        $data['metadiscription'] = '';        $data['subview'] = 'admin/customer/customer';        $this->load->view('index', $data);    }    //================================================================news====================================================//    public function addnews()    {        $this->load->model('News');        if ($this->input->post('add_news')) {            for ($x = 1; $x <= $this->input->post('photo_num'); $x++) {                $file_name = 'img' . $x;                $file[] = $this->upload_image($file_name);            }            $this->News->insert();            $last = $this->News->select_last();            $this->News->insert_album($file, $last[0]->id);            $this->message('success', 'إضافة خبر');            redirect('dashboard/addnews', 'refresh');        }        $data['images'] = $this->News->getdetails();        $data['records'] = $this->News->select_all();        if ($this->input->post('num')) {            if ($this->input->post('num') != 0) {                $data['result'] = $this->input->post('num');                $this->load->view('admin/news/photos', $data);            }        } else {            $data["links"] = $this->pagination->create_links();            $data['title'] = 'إضافة خبر';            $data['metakeyword'] = '';            $data['metadiscription'] = '';            $data['subview'] = 'admin/news/addnews';            $this->load->view('index', $data);        }    }    public function deletenews($id)    {        $this->load->model('News');        $this->News->delete($id);        redirect('dashboard/addnews', 'refresh');    }    public function delete_photo_news($id, $all_id)    {        $this->load->model('News');        $this->News->delete_photo($id);        redirect('dashboard/updatenews/' . $all_id . '');    }    public function updatenews($id)    {        $this->load->model('News');        if ($this->input->post('update')) {            if ($this->input->post('photo_num') != 0) {                for ($x = 1; $x <= $this->input->post('photo_num'); $x++) {                    $file_name = 'img' . $x;                    $file[] = $this->upload_image($file_name);                }            } else {                $file = false;            }            $this->News->update($id, $file);            $this->message('success', 'تعديل خبر');            redirect('dashboard/addnews', 'refresh');        } else {            $data['result'] = $this->News->getById($id);            $data['get_img'] = $this->News->getimg($id);            $data["links"] = $this->pagination->create_links();            $data['title'] = 'تعديل خبر';            $data['metakeyword'] = '';            $data['metadiscription'] = '';            $data['subview'] = 'admin/news/addnews';            $this->load->view('index', $data);        }    }    //================================================================contact====================================================//    public function contact()    {        $this->load->model('Contact');        $config = $this->pagnate('contact', $this->Contact->record_count(), 10);        $page = ($this->uri->segment(3)) ? $this->uri->segment(3) : 0;        $page = (($page * 10) - 10);        if ($page < 0)            $page = 0;        $data['records'] = $this->Contact->select($config["per_page"], $page);        $data["links"] = $this->pagination->create_links();        $data["links"] = $this->pagination->create_links();        $data['title'] = 'إدارة الرسائل الواردة';        $data['metakeyword'] = 'الرسائل الواردة';        $data['metadiscription'] = '';        $data['subview'] = 'admin/contact/contact';        $this->load->view('index', $data);    }    public function delete_contact($id)    {        $this->load->model('Contact');        $this->Contact->delete($id);        redirect('dashboard/contact', 'refresh');    }    public function delete_selected_contact()    {        $this->load->model('Contact');        if ($this->input->post('check') && $this->input->post('del')) {            foreach ($_POST['check'] as $checked) {                $this->Contact->delete($checked);            }        }        redirect('dashboard/contact', 'refresh');    }    //================================================================commets====================================================//    public function comment()    {        $this->load->model('Home_web');        $id = $this->uri->segment(3);        $data['records'] = $this->Home_web->select_comment($id);        $data['title'] = 'إدارة التعليقات الواردة';        $data['metakeyword'] = 'التعليقات الواردة';        $data['metadiscription'] = '';        $data['subview'] = 'admin/contact/comment';        $this->load->view('index', $data);    }    public function suspend_urgents($id, $clas)    {        $this->load->model('Home_web');        $this->Home_web->suspend_urgent($id, $clas);        if ($clas == 'danger')            $this->message('success', 'العرض نشط');        else            $this->message('success', 'العرض غير نشط');        redirect('dashboard/comment', 'refresh');    }    //=========================================================================================register==============================    public function all_register()    {        $this->load->model('Register');        $data['records_all'] = $this->Register->select(1, 0);        $data['records_acc'] = $this->Register->select(1, 1);        $data['records_ref'] = $this->Register->select(1, 2);        $data['records_all_f'] = $this->Register->select(2, 0);        $data['records_acc_f'] = $this->Register->select(2, 1);        $data['records_ref_f'] = $this->Register->select(2, 2);        $data['title'] = 'التسجيلات الواردة';        $data['subview'] = 'admin/reports/report';        $this->load->view('index', $data);    }    public function suspend_app($type, $id)    {        $this->load->model('Register');        $this->Register->suspend($type, $id);        redirect('dashboard/all_register', 'refresh');    }    //====================================================================================الكورسات والدورات//==============================================================================//    public function add_course()    {        $this->load->model('Course');        $data['records'] = $this->Course->select();        if ($this->input->post('add_course')) {            $file = $this->upload_image('course_img');            $this->Course->insert($file);            $this->message('success', '.......');            redirect('dashboard/add_course', 'refresh');        }        $data['title'] = 'إضافة الدوارات التدريبية .';        $data['metakeyword'] = 'إعدادات الدوارات التدريبية ';        $data['metadiscription'] = '';        $data['subview'] = 'admin/wefak/add_course';        $this->load->view('index', $data);    }    public function delete_Course($id)    {        $this->load->model('Course');        $this->Course->delete($id);        redirect('dashboard/add_course', 'refresh');    }    public function update_Course($id)    {        $this->load->model('Course');        if ($this->input->post('update')) {            $file = $this->upload_image('course_img');            $this->Course->update($id, $file);            $this->message('success', 'تعديل عمر المتقدم');            redirect('dashboard/add_course', 'refresh');        }        $data['result'] = $this->Course->getById($id);        $data["links"] = $this->pagination->create_links();        $data['title'] = 'تعديل الدوارات التدريبية .';        $data['metakeyword'] = 'اعدادات الدوارات التدريبية ';        $data['metadiscription'] = '';        $data['subview'] = 'admin/wefak/add_course';        $this->load->view('index', $data);    }    //==================================================================================================================    public function add_sessions()    {        $this->load->model('Course');        $data['Courses'] = $this->Course->select();        $this->load->model('Sessions');        if ($this->input->post('add_sessions')) {            $file = $this->upload_image('sessions_img');            $this->Sessions->insert($file);            $this->message('success', '.......');            redirect('dashboard/add_sessions', 'refresh');        }        $data['records'] = $this->Sessions->select();        $data['title'] = 'إضافة الكورسات .';        $data['metakeyword'] = 'إعدادات الكورسات ';        $data['metadiscription'] = '';        $data['subview'] = 'admin/wefak/add_sessions';        $this->load->view('index', $data);    }    public function add_videos()    {        $this->load->model('Videos');        $data['get_vid'] = $this->Videos->get_vid($this->uri->segment(3));        if ($this->input->post('num')) {            if ($this->input->post('num') != 0) {                $this->load->view('admin/videos/videos');            }        }elseif($this->input->post('add_video')){            $id =$this->uri->segment(3);            $this->Videos->insert($_POST['vid_num'],$id,$this->uri->segment(4));            $this->message('success', 'تمت إضافة الفيديوهات بنجاح');            redirect('dashboard/add_sessions', 'refresh');        }else{            $data['title'] = 'إضافة الفيديوهات .';            $data['metadiscription'] = '';            $data['subview'] = 'admin/videos/add_video';            $this->load->view('index', $data);        }    }    public function delete_videos($id, $all_id,$type)    {        $this->load->model('Videos');        $this->Videos->delete_video($id);        redirect('dashboard/add_videos/'.$all_id.'/'.$type);    }    public function delete_Sessions($id)    {        $this->load->model('Sessions');        $this->Sessions->delete($id);        redirect('dashboard/add_sessions', 'refresh');    }    public function update_Sessions($id)    {        $this->load->model('Course');        $data['Courses'] = $this->Course->select();        $this->load->model('Sessions');        if ($this->input->post('update')) {            $file = $this->upload_image('sessions_img');            $this->Sessions->update($id, $file);            // $this->test($_POST);            $this->message('success', 'تعديل الكورسات');            redirect('dashboard/add_sessions', 'refresh');        }        $data['result'] = $this->Sessions->getById($id);        $data["links"] = $this->pagination->create_links();        $data['title'] = 'تعديل الكورسات .';        $data['metakeyword'] = 'إعدادات الكورسات ';        $data['metadiscription'] = '';        $data['subview'] = 'admin/wefak/add_sessions';        $this->load->view('index', $data);    }    //==================================================================================================================    public function add_sessions_reserve()    {        $this->load->model('Sessions');        $data['sessions'] = $this->Sessions->select();        $this->load->model('Sessions_reserve');        if ($this->input->post('add_sessions_reserve')) {            $this->Sessions_reserve->insert();            $this->message('success', '.......');            redirect('dashboard/add_sessions_reserve', 'refresh');        }        if ($this->input->post('id')) {            if ($this->input->post('id') != '') {                $data['result22'] = $this->Sessions_reserve->search($this->input->post('id'));                if ($data['result22'] == false) {                    echo('<div class="alert alert-success" >                                                      صاحب الهوية لم يتم إضافته من قبل                                                      </div>');                    die;                } else {                    echo('<div class="alert alert-danger" >                                              تم إضافة صاحب رقم الهوية من قبل.                                              </div>');                    die;                }            }        }        $data['records'] = $this->Sessions_reserve->selected();        $data['title'] = 'إضافة حجز الكورسات .';        $data['metakeyword'] = 'إعدادات الكورسات ';        $data['metadiscription'] = '';        $data['subview'] = 'admin/wefak/add_sessions_reserve';        $this->load->view('index', $data);    }    public function delete_Sessions_reserve($id)    {        $this->load->model('Course_confirm');        $this->Course_confirm->delete($id);        redirect('dashboard/sessions_request', 'refresh');    }    public function delete_reserve($id)    {        $this->load->model('Sessions_reserve');        $this->Sessions_reserve->delete_reserve($id);        redirect('dashboard/add_sessions_reserve', 'refresh');    }    public function update_Sessions_reserve($id)    {        $this->load->model('Sessions');        $data['sessions'] = $this->Sessions->select();        $this->load->model('Sessions_reserve');        if ($this->input->post('update')) {            $this->Sessions_reserve->update($id);            $this->message('success', 'تعديل حجز الكورسات');            redirect('dashboard/add_sessions_reserve', 'refresh');        }        $data['result'] = $this->Sessions_reserve->getById($id);        $data["links"] = $this->pagination->create_links();        $data['title'] = 'تعديل الكورسات .';        $data['metakeyword'] = 'إعدادات الكورسات ';        $data['metadiscription'] = '';        $data['subview'] = 'admin/wefak/add_sessions_reserve';        $this->load->view('index', $data);    }    public function sessions_request()    {        $this->load->model('Sessions_reserve');        $data['records'] = $this->Sessions_reserve->getallrequest();        $data['selects'] = $this->Sessions_reserve->select();        $data['title'] = 'طلبات تدريب .';        $data['subview'] = 'admin/wefak/sessions_request';        $this->load->view('index', $data);    }    public function confirm_sessions($id)    {        $this->load->model('Sessions_reserve');        $this->Sessions_reserve->confirm($id);        redirect('dashboard/sessions_request', 'refresh');        $this->message('success', 'تم تاكيد الطلب بنجاح');    }    //====================================================================trainers====================================    public function trainers()    {        $this->load->model('Trainer');        if ($this->input->post('add_trainer')) {            $file_name = 'photo';            $file = $this->upload_file($file_name);            $file_name2 = 'attached_file';            $file2 = $this->upload_image($file_name2);            $this->Trainer->insert($file, $file2);            $this->message('success', 'إضافة مدرب');            redirect('dashboard/trainers', 'refresh');        }        $config = $this->pagnate('trainers', $this->Trainer->record_count(), 50);        $data['records'] = $this->Trainer->select($config["per_page"]);        $data["links"] = $this->pagination->create_links();        $data['title'] = 'بيانات المدربين';        $data['subview'] = 'admin/trainers/trainers';        $this->load->view('index', $data);    }    public function suspend_trainer($id, $clas)    {        $this->load->model('Trainer');        $this->Trainer->suspend($id, $clas);        if ($clas == 'danger')            $this->message('success', 'البيانات نشطة');        else            $this->message('success', 'البيانات غير نشطة');        redirect('dashboard/trainers');    }    public function delete_trainer($id)    {        $this->load->model('Trainer');        $this->Trainer->delete($id);        redirect('dashboard/trainers');    }    public function update_trainers($id)    {        $this->load->model('Trainer');        if ($this->input->post('update')) {            $file_name = 'photo';            $file = $this->upload_file($file_name);            $file_name2 = 'attached_file';            $file2 = $this->upload_image($file_name2);            $this->Trainer->update($id, $file, $file2);            $this->message('success', 'تعديل بيانات المدرب');            redirect('dashboard/trainers', 'refresh');        }        $data['result'] = $this->Trainer->getById($id);        $data["links"] = $this->pagination->create_links();        $data['title'] = 'تعديل  بيانات  المدرب';        $data['metakeyword'] = 'إعدادات المدربين';        $data['metadiscription'] = '';        $data['subview'] = 'admin/trainers/trainers';        $this->load->view('index', $data);    }    //=====================================================================================================================    public function sessions_report()    {        $this->load->model('Sessions_reserve');        $data['records'] = $this->Sessions_reserve->sessions_report();        $data['title'] = ' تقرير تفاصيل الكورس .';        $data['subview'] = 'admin/wefak/sessions_report';        $this->load->view('index', $data);    }    public function downloads($file)    {        $this->load->helper('download');        $name = $file;        $data = file_get_contents('./uploads/files/' . $file);        force_download($name, $data);        redirect('dashboard/trainers', 'refresh');    }    public function start_end()    {        $this->load->model('Start_end');        $this->load->model('Trainer');        $data['course'] = $this->Start_end->select_course();        $data['trainer'] = $this->Trainer->select_web();        if ($this->input->post('add')) {            $data['records'] = $this->Start_end->students($this->input->post('course_id'));            $start_date = $this->input->post('start_date');           // $start_date = $this->HijriToJD($start_date[2], $start_date[1], $start_date[0]);            $end_date = $this->input->post('end_date');           // $end_date = $this->HijriToJD($end_date[2], $end_date[1], $end_date[0]);             $this->Start_end->insert($data['records'], $start_date, $end_date);            //$this->Start_end->insert1();            $this->message('success', 'الإضافة بنجاح');            redirect('dashboard/start_end', 'refresh');        }        if ($this->input->post('num')) {            if ($this->input->post('num') != '') {                $data['records'] = $this->Start_end->students($this->input->post('num'));                $students = $data['records'];                $this->load->view('admin/wefak/load', $data);            }        } elseif ($this->input->post('group_id')) {            if ($this->input->post('group_id') != '') {                $data['records'] = $this->Start_end->getById($this->input->post('group_id'));                $students = $data['records'];                $this->load->view('admin/wefak/load', $data);            }        } else {            $data['records'] = $this->Start_end->select();            $data['title'] = 'تحديد مواعيد الكورس';            $data['metakeyword'] = 'تحديد مواعيد الكورس';            $data['metadiscription'] = '';            $data['subview'] = 'admin/wefak/start_end';            $this->load->view('index', $data);        }    }    public function delete_start_end($group_id)    {        $this->load->model('Start_end');        $this->Start_end->delete($group_id);        redirect('dashboard/start_end');    }    public function update_start_end($group_id)    {        $this->load->model('Start_end');        $this->load->model('Trainer');        $data['trainer'] = $this->Trainer->select_web();        if ($this->input->post('update')) {            $start_date = $this->input->post('start_date');          //  $start_date = $this->HijriToJD($start_date[2], $start_date[1], $start_date[0]);            $end_date = $this->input->post('end_date');          //  $end_date = $this->HijriToJD($end_date[2], $end_date[1], $end_date[0]);            $this->Start_end->update($group_id, $start_date, $end_date);            //$this->Start_end->update($group_id);            $this->message('success', 'تعديل موعد كورس');            redirect('dashboard/start_end', 'refresh');        }        $data['result'] = $this->Start_end->getById($group_id);        $data['course'] = $this->Start_end->select_course();        $data['title'] = 'تعديل موعد كورس';        $data['metakeyword'] = 'إعدادات موعد كورس';        $data['metadiscription'] = '';        $data['subview'] = 'admin/wefak/start_end';        $this->load->view('index', $data);    }    //====================================================================booking========================================    public function booking()    {        $this->load->model('Sessions_reserve');        $this->load->model('Course_confirm');        if ($this->input->post('add_confirm')) {            $this->Course_confirm->insert($this->input->post('student_id'));            $this->message('success', 'الإضافة بنجاح');            redirect('dashboard/booking', 'refresh');        }        if ($this->input->post('id')) {            if ($this->input->post('id') != '') {                $data['result22'] = $this->Sessions_reserve->search($this->input->post('id'));                $data['courses'] = $this->Course_confirm->courses();                $this->load->view('admin/wefak/load_search', $data);            }        } else {            $data['records'] = $this->Course_confirm->select_all();            $data['title'] = 'بحث عن متدرب';            $data['metakeyword'] = 'بحث عن متدرب';            $data['metadiscription'] = '';            $data['subview'] = 'admin/wefak/booking';            $this->load->view('index', $data);        }    }    public function delete_booking($id)    {        $this->load->model('Course_confirm');        $this->Course_confirm->delete($id);        redirect('dashboard/booking', 'refresh');    }    public function update_booking($id, $student_id)    {        $this->load->model('Course_confirm');        $this->load->model('Sessions_reserve');        $this->load->model('Sessions');        if ($this->input->post('update')) {            $this->Course_confirm->update($id);            $this->message('success', 'تعديل بيانات المدرب');            redirect('dashboard/booking', 'refresh');        }        $data['student'] = $this->Sessions_reserve->getById($student_id);        $data['courses'] = $this->Course_confirm->courses();        $data['result'] = $this->Course_confirm->getById($id);        $data['result2'] = $this->Sessions->getById($data['result']['course_id']);        $data['title'] = 'تعديل  حجز كورس';        $data['metakeyword'] = 'إعدادات حجز كورس';        $data['metadiscription'] = '';        $data['subview'] = 'admin/wefak/booking';        $this->load->view('index', $data);    }    //====================================================================report========================================    public function R_course()    {        $this->load->model('Course');        $data['Courses'] = $this->Course->select();        $this->load->model('Sessions');        $data['records'] = $this->Sessions->select();        $data['title'] = 'تقرير الكورسات.';        $data['metadiscription'] = '';        $data['subview'] = 'admin/report/R_course';        $this->load->view('index', $data);    }    public function R_reserve()    {        $this->load->model('Sessions_reserve');        $data['records'] = $this->Sessions_reserve->report();        $data['title'] = 'تقرير الحجوزات.';        $data['metadiscription'] = '';        $data['subview'] = 'admin/report/R_reserve';        $this->load->view('index', $data);    }    public function update_certification($group_id)    {        $this->load->model('Start_end');        $this->Start_end->update_certification($group_id);        redirect('dashboard/start_end');    }    public function R_trainers()    {        $this->load->model('Start_end');        $data['records'] = $this->Start_end->select_trainers();        $data['title'] = 'تقرير المدربين';        $data['metadiscription'] = '';        $data['subview'] = 'admin/report/R_trainers';        $this->load->view('index', $data);    }    public function R_reserve_period()    {        $this->load->model('Course_confirm');        if ($this->input->post('date_from') && $this->input->post('date_to')) {            $data['records'] = $this->Course_confirm->select_count();            $this->load->view('admin/report/load_period', $data);        } else {            $data['title'] = 'تقرير الحجوزات خلال فترة';            $data['metadiscription'] = '';            $data['subview'] = 'admin/report/R_reserve_period';            $this->load->view('index', $data);        }    }    public function R_reserve_details()    {        $this->load->model('Course');        $this->load->model('Sessions');        $this->load->model('Course_confirm');        if ($this->input->post('course_id')) {            if ($this->input->post('course_id') != '') {                $data['sessions'] = $this->Sessions->select_where($this->input->post('course_id'));                $this->load->view('admin/report/load_session', $data);            }        } elseif ($this->input->post('session_id')) {            if ($this->input->post('session_id') != '') {                $data['students'] = $this->Course_confirm->select_where($this->input->post('session_id'));                //var_dump($data['students']);die;                $this->load->view('admin/report/load_reserve_details', $data);            }        } else {            $data['courses'] = $this->Course->select();            $data['title'] = 'تقرير تفصيلي';            $data['metadiscription'] = '';            $data['subview'] = 'admin/report/R_reserve_details';            $this->load->view('index', $data);        }    }    public function R_reservers()    {        $this->load->model('Sessions_reserve');        $data['students'] = $this->Sessions_reserve->R_reservers();        $data['records'] = $data['students'][0];        $data['records2'] = $data['students'][1];        $data['title'] = 'تقرير المتدربين';        $data['metadiscription'] = '';        $data['subview'] = 'admin/report/R_reservers';        $this->load->view('index', $data);    }    public function R_trainers2()    {        $this->load->model('Start_end');        $data['records'] = $this->Start_end->select_trainers();        $data['title'] = 'تقرير المدربين';        $data['metadiscription'] = '';        $data['subview'] = 'admin/report/R_trainers2';        $this->load->view('index', $data);    }    public function R_trainers3()    {        $this->load->model('Course_confirm');        $data['records'] = $this->Course_confirm->select_count2();        $data['title'] = 'تقرير المدربين';        $data['metadiscription'] = '';        $data['subview'] = 'admin/report/R_trainers3';        $this->load->view('index', $data);    }//=======================================================trainers_opinions//===================================    public function add_trainers_openions(){        $this->load->model('Trainer');        if ($this->input->post('add_trainers_openions')){            $file_name='trainer_logo';            $file= $this->upload_image($file_name);            $this->Trainer->insert_openions($file);            $this->message('success','تمت الإضافة');            redirect('dashboard/add_trainers_openions','refresh');        }        $data['avilable_trainers']=$this->Trainer->avilable_trainers();        $data['records']=$this->Trainer->select_openions("");        $data['title'] = 'إضافة  رأى المتدرب';        $data['metakeyword'] = '';        $data['metadiscription'] = '';        $data['subview'] = 'admin/trainers/trainers_openion';        $this->load->view('index', $data);    }//-------------------------------------------    public function update_trainers_openions($id){        $this->load->model('Trainer');        if($this->input->post('update_trainers_openions')){            $file_name='trainer_logo';            $file= $this->upload_image($file_name);            $this->Trainer->update_openions($id,$file);            $this->message('success','تم التعديل');            redirect('dashboard/add_trainers_openions','refresh');        }        $data['avilable_trainers']=$this->Trainer->avilable_trainers();        $data['result']=$this->Trainer->getById_openions($id);        $data["links"] = $this->pagination->create_links();        $data['title'] = 'تعديل  رأى المتدرب';        $data['metakeyword'] = '';        $data['metadiscription'] = '';        $data['subview'] = 'admin/trainers/trainers_openion';        $this->load->view('index', $data);    }    public function delete_trainers_openions($id){        $this->load->model('Trainer');        $this->Trainer->delete_openions($id);        redirect('dashboard/add_trainers_openions');    }    //------------------------------ 25-5-2017 -----------------------------    public function all_reservation(){        $this->load->model('Sessions_reserve');        $arr_0=array('session_reserve_confirm'=>0);        $arr_1=array('session_reserve_confirm'=>1);        $arr_2=array('session_reserve_confirm'=>2);        $arr_all=array('sessions_reserve_id_pk !='=>0);        $data['received_reservation']=$this->Sessions_reserve->slect_resevation($arr_0,'');        $data['accept_reservation']=$this->Sessions_reserve->slect_resevation($arr_1,'');        $data['refused_reservation']=$this->Sessions_reserve->slect_resevation($arr_2,'');        $data['all_reservation']=$this->Sessions_reserve->slect_resevation($arr_all,'');        $data['all_session']=$this->Sessions_reserve->all_sessions();        $data['title'] = 'جميع الحجوزات';        $data['metadiscription'] = '';        $data['subview'] = 'admin/resrvation/reservation_approved';        $this->load->view('index', $data);    }    public function reservation_approved($type,$id){        $this->load->model('Sessions_reserve');        if($type ==1){            $this->message('success', 'تم قبول الحجز');        }elseif($type ==2){            $this->message('error', 'تم رفظ الحجز');        }        $this->Sessions_reserve->update_reservation($type,$id);        redirect('dashboard/all_reservation');    }/*************************************************************/    public function addoffer()    {        $this->load->model('Offer');        if ($this->input->post('add_offer')) {            $file_name = 'img';            $file = $this->upload_image($file_name);            $this->Offer->insert($file, 3);            $this->message('success', 'عروض ريفانا ');            redirect('dashboard/addoffer', 'refresh');        }        $data['records'] = $this->Offer->select();                $data['title'] = 'عروض ريفانا ';        $data['metakeyword'] = 'عروض ريفانا ';        $data['metadiscription'] = '';        $data['subview'] = 'admin/offers/offer';        $this->load->view('index', $data);    }    public function updateoffer($id)    {        $this->load->model('Offer');        if ($this->input->post('update')) {            $file_name = 'img';            $file = $this->upload_image($file_name);            $this->Offer->update($id, $file);            $this->message('success', 'تعديل عروض ريفانا ');            redirect('dashboard/addoffer', 'refresh');        }        $data['result'] = $this->Offer->getById($id);        $data['title'] = 'تعديل عروض ريفانا ';        $data['metakeyword'] = 'إتعديل عروض ريفانا';        $data['metadiscription'] = '';        $data['subview'] = 'admin/offers/offer';        $this->load->view('index', $data);    }    public function deleteoffer($id)    {        $this->load->model('Offer');        $this->Offer->delete($id);        redirect('dashboard/addoffer');    }    public function suspendoffer($id, $clas)    {        $this->load->model('Offer');        $this->Offer->suspend($id, $clas);        if ($clas == 'danger')            $this->message('success', 'العرض نشط ');        else            $this->message('success', 'العرض غير نشط ');        redirect('dashboard/addoffer');    } public function all_offers_register() { $this->load->model('Offers_reg'); $data['records_offers_all'] = $this->Offers_reg->select(0); $data['records_offers_acc'] = $this->Offers_reg->select(1); $data['records_offers_ref'] = $this->Offers_reg->select(2); $data['records_courses_all'] = $this->Offers_reg->select_(0); $data['records_courses_acc'] = $this->Offers_reg->select_(1); $data['records_courses_ref'] = $this->Offers_reg->select_(2); $data['title'] = 'طلبات الحجز الواردة'; $data['subview'] = 'admin/reports/report_offers_reserve'; $this->load->view('index', $data); } public function suspend_offers_app($type, $id) { $this->load->model('Offers_reg'); $this->Offers_reg->suspend($type, $id); redirect('dashboard/all_offers_register', 'refresh'); } public function suspend_courses_app($type, $id) { $this->load->model('Offers_reg'); $this->Offers_reg->suspend_($type, $id); redirect('dashboard/all_offers_register', 'refresh'); }/*******************************************************/ public function slider(){      $this->load->model('Slider_model');            if ($this->input->post('add_img')) {                $file_name = 'img';                $file = $this->upload_image($file_name);                $this->Slider_model->insert($file);                $this->message('success', 'إضافة الصورة');                redirect('dashboard/slider', 'refresh');            }            $data['records'] = $this->Slider_model->select('');            $data['title'] = 'الصورالرئيسية';            $data['metakeyword'] = 'الصورالرئيسية';            $data['metadiscription'] = 'الصورالرئيسية';            $data['subview'] = 'admin/slider/slider';            $this->load->view('index', $data);     }//----------------------------------------------------------  public function update_slider($id){       $this->load->model('Slider_model');            if ($this->input->post('update')) {                $file_name = 'img';                $file = $this->upload_image($file_name);                $this->Slider_model->update($id, $file);                $this->message('success', 'تعديل الصور');                redirect('dashboard/slider', 'refresh');            }            $data['result'] = $this->Slider_model->getById($id);            $data['title'] = 'الصورالرئيسية';            $data['metakeyword'] = 'الصورالرئيسية';            $data['metadiscription'] = 'الصورالرئيسية';            $data['subview'] = 'admin/slider/slider';            $this->load->view('index', $data);         } //------------------------------------------------------- public function delete_slider($id){          $this->load->model('Slider_model');      $this->Slider_model->delete_img($id);     redirect('dashboard/slider', 'refresh');       }}